{"version":3,"sources":["Images/Headshot.jpg","Images/banner.jpg","Components/DrawerItems.js","Components/MainScreen.js","Views/Home/HomeView.js","Views/Home/index.js","Views/MyProjects/MyProjectsView.js","Views/MyProjects/index.js","Views/Interests/InterestsView.js","Views/Interests/index.js","Routes/MainScreenRoutes.js","Components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ListItemLink","props","icon","primary","to","renderLink","useMemo","forwardRef","itemProps","ref","ListItem","button","component","ListItemIcon","ListItemText","TemporaryDrawer","List","useStyles","makeStyles","theme","root","display","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","position","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","menuButtonHidden","title","flexGrow","drawerPaper","whiteSpace","drawerPaperClose","overflowX","spacing","breakpoints","up","content","height","overflow","container","paddingTop","paddingBottom","paper","flexDirection","fixedHeight","main","paddingLeft","mainShift","drawerSpacer","MainScreen","classes","useState","open","setOpen","className","CssBaseline","AppBar","clsx","Toolbar","IconButton","edge","color","aria-label","onClick","Typography","variant","noWrap","Badge","badgeContent","Drawer","Divider","DrawerItems","children","appBarSpacer","margin","maxWidth","image","img","maxHeight","HomeView","Grid","Paper","direction","justify","key","item","xs","md","ButtonBase","alt","src","Headshot","id","Home","MyProjectsView","Container","MyProjects","InterestsView","Interests","MainScreenRoutes","path","banner","backgroundImage","Banner","backgroundAttachment","backgroundPosition","backgroundRepeat","backgroundSize","opacity","Footer","styles","app","backgroundColor","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.bc8352d8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Headshot.15b916b5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/banner.8f424f86.jpg\";","import React, { useMemo, forwardRef } from \"react\";\nimport { Link } from \"@reach/router\";\nimport {\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n} from \"@material-ui/core\";\nimport HomeIcon from '@material-ui/icons/Home';\nimport CodeIcon from '@material-ui/icons/Code';\nimport SportsHockeyIcon from '@material-ui/icons/SportsHockey';\n\nfunction ListItemLink(props) {\n  const { icon, primary, to } = props;\n\n  const renderLink = useMemo(\n    () =>\n      forwardRef((itemProps, ref) => <Link to={to} ref={ref} {...itemProps} />),\n    [to]\n  );\n\n  return (\n    <li>\n      <ListItem button component={renderLink}>\n        {icon ? <ListItemIcon>{icon}</ListItemIcon> : null}\n        <ListItemText primary={primary} />\n      </ListItem>\n    </li>\n  );\n}\n\nconst TemporaryDrawer = () => {\n\n  return (\n      <List>\n        <ListItemLink to=\"/\" primary=\"Home Page\" icon={<HomeIcon />} />\n        <ListItemLink\n          to=\"MyProjects\"\n          primary=\"My Projects\"\n          icon={<CodeIcon />}\n        />\n        <ListItemLink to=\"Interests\" primary=\"Interests\" icon={<SportsHockeyIcon />} />\n      </List>\n  );\n};\n\nexport default TemporaryDrawer;\n","import React, { useState } from \"react\";\nimport clsx from \"clsx\";\nimport {\n  CssBaseline,\n  AppBar,\n  Toolbar,\n  IconButton,\n  makeStyles,\n  Typography,\n  Badge,\n  Drawer,\n  Divider,\n} from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\n\nimport DrawerItems from \"./DrawerItems\";\n\nconst drawerWidth = 250;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  toolbar: {\n    paddingRight: 24,\n  },\n  toolbarIcon: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: \"0 8px\",\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    position: \"fixed !important\",\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    position: \"fixed !important\",\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: \"none\",\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: \"fixed\",\n    whiteSpace: \"nowrap\",\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    position: \"fixed\",\n    overflowX: \"hidden\",\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(9),\n    },\n  },\n  \n  content: {\n    flexGrow: 1,\n    height: \"100vh\",\n    overflow: \"auto\",\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n  },\n  fixedHeight: {\n    height: 240,\n  },\n  main: {\n    width: \"100%\",\n    paddingLeft: 70,\n  },\n  mainShift: {\n    width: \"100%\",\n    paddingLeft: drawerWidth,\n  },\n  drawerSpacer: {\n    padding: 20,\n    height: \"100%\",\n  },\n}));\n\nconst MainScreen = (props) => {\n  const classes = useStyles();\n\n  const [open, setOpen] = useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"absolute\"\n        className={clsx(classes.appBar, open && classes.appBarShift)}\n      >\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(\n              classes.menuButton,\n              open && classes.menuButtonHidden\n            )}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography\n            component=\"h1\"\n            variant=\"h6\"\n            color=\"inherit\"\n            noWrap\n            className={classes.title}\n          >\n            Dashboard\n          </Typography>\n          <IconButton color=\"inherit\">\n            <Badge badgeContent={4} color=\"secondary\">\n              <NotificationsIcon />\n            </Badge>\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n        }}\n        open={open}\n      >\n        <div\n          className={classes.toolbarIcon}\n        >\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <DrawerItems />\n        <Divider />\n      </Drawer>\n\n          <main className={clsx(classes.main, open && classes.mainShift)}>\n            {props.children}\n          </main>\n\n    </div>\n  );\n};\n\nexport default MainScreen;\n","import React from \"react\";\nimport { Grid, Paper, makeStyles, ButtonBase, Typography } from \"@material-ui/core\";\n\nimport Headshot from \"../../Images/Headshot.jpg\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  paper: {\n    padding: theme.spacing(2),\n    margin: \"auto\",\n    maxWidth: 1500,\n  },\n  image: {\n    padding: theme.spacing(2),\n    width: \"100%\",\n  },\n  img: {\n    margin: \"auto\",\n    display: \"block\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    maxWidth: \"100%\",\n    maxHeight: \"100%\",\n  },\n}));\n\nconst HomeView = () => {\n  const classes = useStyles();\n  return (\n    <Grid className={classes.root}>\n      <div className={classes.appBarSpacer} />\n      <Paper className={classes.paper}>\n        <Grid\n          container\n          direction=\"row\"\n          justify=\"space-evenly\"\n          alignItems=\"center\"\n          spacing={2}\n        >\n          <Grid key={0} item xs={12} md={6} >\n            <Typography variant=\"h2\">Who Am I?</Typography>\n            <Typography>\n              Hi! My name is Luc Murakami and I am a student currently studying\n              at BCIT in the CST program. Curious in nature, and relentless in\n              my work ethic, I want to learn everything there is to know about\n              the technology field and cut out my own, unique path.\n            </Typography>\n            <br />\n            <Typography>\n              Previously, I went to UBC and graduated with a Bachelors of\n              Science in Biology. During my time at UBC I was lucky enough to be\n              involved in the co-op program and worked in the academic research\n              field for a year. This was a year of self discovery and learning,\n              and I am very thankful that I was able to experience living\n              independantly. It was during this time that I started looking into\n              coding as we were using macros to make work more efficient.\n            </Typography>\n            <br />\n            <Typography>\n              Computers have always been a topic of interest for me, even when I\n              was a young child. I would also always take electronic devices\n              apart to see how they worked on the inside, and I think this\n              curiosity has followed me throughout my life. I know that if I\n              don't understand something at first, the answer is just a few\n              hours of investigation and experimentation away.\n            </Typography>\n            <br />\n            <Typography>\n              After my co-op experience I returned to school to finish my\n              Bachelors. I felt it was important to finish what I had started,\n              but I knew in my heart that programming and technology was where I\n              really should be. Thus, after I graduated I went directly to BCIT\n              to pursue a degree in Computer System Technology and I haven't\n              looked back since.\n            </Typography>\n            <br />\n            <Typography>Look out world, here I come!</Typography>\n          </Grid>\n          <Grid key={1} item xs={12} md={6}>\n            <ButtonBase className={classes.image}>\n              <img\n                className={classes.img}\n                alt=\"headshot\"\n                src={Headshot}\n                id=\"headshot\"\n              />\n            </ButtonBase>\n          </Grid>\n        </Grid>\n      </Paper>\n    </Grid>\n  );\n};\n\nexport default HomeView;\n","import React from 'react';\nimport HomeView from './HomeView'\n\nconst Home = () => {\n  return (\n    <HomeView />\n  )\n}\n\nexport default Home;\n","import React from \"react\";\nimport { Container, makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  appBarSpacer: theme.mixins.toolbar,\n}));\n\nconst MyProjectsView = () => {\n  const classes = useStyles();\n  return (\n    <Container>\n      <div className={classes.appBarSpacer} />\n      <p>This is MyProjectsScreen</p>\n    </Container>\n  );\n};\n\nexport default MyProjectsView;\n","import React from 'react';\nimport MyProjectsView from './MyProjectsView'\n\nconst MyProjects = () => {\n  return (\n    <MyProjectsView />\n  )\n}\n\nexport default MyProjects;\n","import React from \"react\";\nimport { Container, makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  appBarSpacer: theme.mixins.toolbar,\n}));\n\nconst InterestsView = () => {\n  const classes = useStyles();\n  return (\n    <Container>\n      <div className={classes.appBarSpacer} />\n      <p>This is the InterestsScreen</p>\n    </Container>\n  );\n};\n\nexport default InterestsView;\n","import React from 'react';\nimport InterestsView from './InterestsView'\n\nconst Interests = () => {\n  return (\n    <InterestsView />\n  )\n}\n\nexport default Interests;\n","import React from \"react\";\nimport { Router } from \"@reach/router\";\n\nimport Home from \"../Views/Home\";\nimport MyProjects from \"../Views/MyProjects\";\nimport Interests from \"../Views/Interests\";\n\nconst MainScreenRoutes = () => {\n  return (\n    <Router>\n      <Home path=\"/\" />\n      <MyProjects path=\"MyProjects\" />\n      <Interests path=\"Interests\" />\n    </Router>\n  );\n}\n\nexport default MainScreenRoutes;\n","import React from \"react\";\nimport { Container, makeStyles } from \"@material-ui/core\";\n\nimport Banner from \"../Images/banner.jpg\";\n\nconst useStyles = makeStyles((theme) => ({\n  banner: {\n    backgroundImage: `url(${Banner})`,\n    height: 500,\n    backgroundAttachment: \"fixed\",\n    backgroundPosition: \"center\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundSize: \"cover\",\n    opacity: 1,\n    width: \"100%\",\n  },\n}));\n\nconst Footer = () => {\n  const styles = useStyles();\n  return (\n    <footer className=\"App\">\n\n        <Container className={styles.banner}></Container>\n\n      footer\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\n\nimport MainScreen from \"./Components/MainScreen\";\nimport MainScreenRoutes from \"./Routes/MainScreenRoutes\";\nimport Footer from \"./Components/Footer\";\n\nconst useStyles = makeStyles((theme) => ({\n  app: {\n    backgroundColor: \"#F1F1F1\",\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  return (\n    <div className={classes.app}>\n      <MainScreen>\n        <MainScreenRoutes />\n        <Footer />\n      </MainScreen>\n      \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'fontsource-roboto';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}